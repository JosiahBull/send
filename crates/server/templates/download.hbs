<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="description" content="Download page for a file named {{file_name}}.">
  <meta name="author" content="{{username}}">
  <meta name="keywords" content="download, file, send, share, cli, curl, wget">

  {{!-- This page follows the system setting for dark/light mode --}}
  <meta name="darkreader-lock">

  {{!-- Prevent search engines from indexing this page. --}}
  <meta name="robots" content="noindex, nofollow" />

  {{!-- Set the open graph headers to make this page show a nice preview. --}}
  <meta property="og:title" content="{{file_name}} Download">
  <meta property="og:description" content="Download page for {{file_name}}.">
  <meta property="og:image" content="{{base_url}}/favicon-192x192.png">
  <meta property="og:url" content="{{download_url}}">
  <meta property="og:type" content="website">

  <title>{{file_name}}</title>

  <!-- All icons as required by the various platforms -->
  <link rel="icon" type="image/png" href="/favicon-96x96.png" sizes="96x96" />
  <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
  <link rel="shortcut icon" href="/favicon.ico" />
  <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
  <meta name="apple-mobile-web-app-title" content="Send" />
  <link rel="manifest" href="/site.webmanifest" />

  <link rel="stylesheet" href="/styles.css">
</head>

<body data-theme="light">
  {{!-- TODO: update the theme toggle to use an icon instead of text --}}
  <button class="theme-toggle" onclick="toggleTheme()">Light Mode</button>

  <div class="main-content">
    <div class="container">
      <h1>Download File</h1>
      <div class="file-info">
        <p><strong>File Name:</strong> {{file_name}}</p>
        <p><strong>Uploaded By:</strong> <a href="{{username_source_url}}">{{username}}</a></p>
        {{!-- TODO: update them using javascript. --}}
        <p><strong>Uploaded:</strong> <span class="uploadedAt">{{upload_date}}</span></p>
        <p><strong>Expires: </strong> <span class="expiresAt">{{expiry_date}}</span></p>
        <p><strong>File Size:</strong> {{file_size_bytes}}</p>
      </div>
      <a href="{{download_url}}" class="button" download="{{file_name}}">Download via Browser</a>
      <div class="cli-instructions">
        <p><strong>Download via CLI:</strong></p>
        <div class="cli-command">
          <span class="code">curl -o {{file_name}} {{download_url}}</span>
          <svg class="copy-icon" onclick="copyCommand('curl -o {{file_name}} {{download_url}}')"
            xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
            <path
              d="M19 3h-8c-1.1 0-2 .9-2 2v2H5c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2v-2h4c-1.1 0-2-.9 2-2V5c0-1.1-.9-2-2-2zm-6 14H5V9h8v8zm6-4h-4V5h4v8z" />
          </svg>
        </div>
        <div class="cli-command">
          <span class="code">wget -O {{file_name}} {{download_url}}</span>
          <svg class="copy-icon" onclick="copyCommand('wget -O {{file_name}} {{download_url}}')"
            xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
            <path
              d="M19 3h-8c-1.1 0-2 .9-2 2v2H5c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2v-2h4c-1.1 0-2-.9 2-2V5c0-1.1-.9-2-2-2zm-6 14H5V9h8v8zm6-4h-4V5h4v8z" />
          </svg>
        </div>
      </div>
      <div class="upload-cta">
        <p>Want to upload a file? <a href="/">Click here to upload</a>.</p>
      </div>
    </div>
  </div>
  {{!-- TODO: replace these with SVG paths to avoid ANY external dependency of any kind. --}}
  <div class="social-links">
    <a href="https://www.linkedin.com/in/josiah-bull">
      <img src="https://cdn.jsdelivr.net/npm/simple-icons/icons/linkedin.svg" alt="LinkedIn">
      LinkedIn
    </a>
    <a href="https://github.com/josiahbull/send">
      <img src="https://cdn.jsdelivr.net/npm/simple-icons/icons/github.svg" alt="GitHub">
      GitHub
    </a>
  </div>

  <div id="toast" class="toast"></div>

  {{!-- JavaScript for handling setting the time to browser time --}}
  <script>
    const uploadedAt = new Date(uploadedAtUtc);
    const expiresAt = new Date(expiresAtUtc);

    const uploadedAtElement = document.querySelector('.uploadedAt');
    const expiresAtElement = document.querySelector('.expiresAt');

    //
  </script>

  <!-- JavaScript for handling theme changes/toggles -->
  <script>
    const themeToggle = document.querySelector('.theme-toggle');
    const root = document.documentElement;

    const themes = ['light', 'dark', 'auto'];
    let currentTheme = localStorage.getItem('theme') || 'auto';

    function setTheme(theme) {
      if (theme === 'auto') {
        const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
        theme = prefersDark ? 'dark' : 'light';
      }
      document.body.setAttribute('data-theme', theme);
      themeToggle.textContent = `${capitalize(currentTheme)} Mode`;
      localStorage.setItem('theme', currentTheme);
    }

    function toggleTheme() {
      const currentIndex = themes.indexOf(currentTheme);
      currentTheme = themes[(currentIndex + 1) % themes.length];
      setTheme(currentTheme);
    }

    function capitalize(word) {
      return word.charAt(0).toUpperCase() + word.slice(1);
    }

    // Apply theme on page load
    setTheme(currentTheme);

    // Update theme if system setting changes and in Auto Mode
    window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', () => {
      if (currentTheme === 'auto') setTheme('auto');
    });
  </script>

  <!-- JavaScript for handling toast notification and copying command -->
  <script>
    function copyCommand(command) {
      navigator.clipboard.writeText(command).then(() => {
        showToast(`Command copied: ${command}`);
      }).catch(err => {
        showToast(`Failed to copy: ${err}`);
      });
    }

    function showToast(message) {
      const toast = document.getElementById('toast');
      toast.textContent = message;
      toast.classList.add('show');
      setTimeout(() => {
        toast.classList.remove('show');
      }, 3000);
    }
  </script>
</body>

</html>
